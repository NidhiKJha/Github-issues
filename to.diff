diff --git a/src/components/landingPage/issueBox.js b/src/components/landingPage/issueBox.js
index 198b302..9e1f121 100644
--- a/src/components/landingPage/issueBox.js
+++ b/src/components/landingPage/issueBox.js
@@ -1,68 +1,87 @@
-import React, { Component } from "react";
-import axios from "axios";
-import { Link } from "react-router-dom";
+import React, { Component } from 'react';
+import axios from 'axios';
+import { Link } from 'react-router-dom';
 
 class Box extends Component {
-  state = {
-    lists: [],
-    isLoading: true,
-    errors: null,
-  };
+    constructor(props) {
+        super();
+        console.log(props);
+        this.state = {
+            issue_list: [],
+            isLoading: true,
+            error: null
+        };
+    }
 
-  // Now we're going to make a request for data using axios
-  getLists() {
-    axios
-      //   // This is where the data is hosted
-      .get("https://api.github.com/repos/facebook/react/issues?page=1")
-      //   // Once we get a response and store data, let's change the loading state
-      .then((response) => {
-        console.log({ response });
-        this.setState({
-          lists: response.data,
-          isLoading: false,
-        });
-      })
-      //   // If we catch any errors connecting, let's update accordingly
-      .catch((error) => this.setState({ error, isLoading: false }));
-  }
-  // Let's our app know we're ready to render the data
-  componentDidMount() {
-    this.getLists();
-  }
+    componentDidUpdate(previousProps) {
+        if (previousProps.user_repo !== this.props.user_repo) {
+            this.getLists(this.props.user_repo);
+        }
+    }
 
-  // Putting that data to use
-  render() {
-    const { isLoading, lists } = this.state;
-    return (
-      <div className="Item">
-        <span className="row">
-          <span className="col-xs-3">Issue </span>
-          <span className="col-xs-9">title</span>
-          <span className="col-xs-3">assignee</span>
-        </span>
-        {!isLoading ? (
-          lists.map((list, index) => {
-            const { title, assignee, created_at, number } = list;
-            return (
-              <div key={index.toString() + number.toString()}>
-                <div className="Item">
-                  <Link to={"/issuepage/" + number}>
-                    <span className="row">
-                      <span className="col-xs-3">{number}</span>
-                      <span className="col-xs-9">{title}</span>
-                      <span className="col-xs-3">{assignee}</span>
-                    </span>
-                  </Link>
-                </div>
-              </div>
-            );
-          })
-        ) : (
-          <p>Loading...</p>
-        )}
-      </div>
-    );
-  }
+    // Now we're going to make a request for data using axios
+    getLists(user_repo) {
+        console.log('object');
+        axios
+            // This is where the data is hosted
+            .get(`https://api.github.com/repos/${user_repo}/issues?page=1`)
+            // .get(`https://www.google.com/`)
+            // Once we get a response and store data, let's change the loading state
+            .then((response) => {
+                console.log({ response });
+                this.setState({
+                    issue_list: response.data,
+                    error: false,
+                    isLoading: false
+                });
+            })
+            // If we catch any errors connecting, let's update accordingly
+            .catch((error) => this.setState({ error: true, isLoading: false }));
+    }
+    /////////////////////////////////////////
+    // Putting that data to use
+    render() {
+        const { isLoading, issue_list, error } = this.state;
+        const { user_repo } = this.props;
+
+        if (!user_repo) {
+            return <div>Please enter an valid repository identifier</div>;
+        }
+        if (error) {
+            return <div>An error occurred while fetching issue.</div>;
+        }
+        if (isLoading) {
+            return <div>Loading...</div>;
+        }
+        if (!issue_list.length) {
+            return <div>No issues to display</div>;
+        }
+        return (
+            <div className="Item">
+                <span className="row">
+                    <span className="col-xs-3">Issue </span>
+                    <span className="col-xs-9">title</span>
+                    <span className="col-xs-3">assignee</span>
+                </span>
+                {issue_list.map((list, index) => {
+                    const { title, assignee, created_at, number } = list;
+                    return (
+                        <div key={index.toString() + number.toString()}>
+                            <div className="Item">
+                                <Link to={'/issuepage/' + number}>
+                                    <span className="row">
+                                        <span className="col-xs-3">{number}</span>
+                                        <span className="col-xs-9">{title}</span>
+                                        <span className="col-xs-3">{assignee}</span>
+                                    </span>
+                                </Link>
+                            </div>
+                        </div>
+                    );
+                })}
+            </div>
+        );
+    }
 }
 
 export default Box;
diff --git a/src/components/landingPage/page.js b/src/components/landingPage/page.js
index 3196185..b14fcd0 100644
--- a/src/components/landingPage/page.js
+++ b/src/components/landingPage/page.js
@@ -1,27 +1,41 @@
-import React, { Component } from "react";
-import NavBar from "./nav";
-import Footer from "./footer";
-import Box from "./issueBox";
-import "./landingPage.css" ;
+import React, { Component } from 'react';
+import NavBar from './nav';
+import Footer from './footer';
+import Box from './issueBox';
+import './landingPage.css';
+import Search from './search';
+import axios from 'axios';
 
 class LandingPage extends Component {
-  render() {
-    return (
-      <div>
-        <div>
-          <NavBar />
-        </div>
-        <div>Search</div>
-        <div>
-          {" "}Hi
-          <Box />{" "}
-        </div>
-        <div>
-          <Footer />
-        </div>
-      </div>
-    );
-  }
+    constructor() {
+        super();
+        this.state = {
+            user_repo: ''
+        };
+    }
+
+    setSearchQuery(query) {
+        this.setState({
+            user_repo: query
+        });
+    }
+
+    render() {
+        return (
+            <div>
+                <div>
+                    <NavBar />
+                </div>
+                <Search setSearchQuery={(query) => this.setSearchQuery(query)} />
+                <div>
+                    <Box user_repo={this.state.user_repo} />
+                </div>
+                <div>
+                    <Footer />
+                </div>
+            </div>
+        );
+    }
 }
 
 export default LandingPage;
diff --git a/src/components/landingPage/search.js b/src/components/landingPage/search.js
index e69de29..aeda9f2 100644
--- a/src/components/landingPage/search.js
+++ b/src/components/landingPage/search.js
@@ -0,0 +1,37 @@
+import React, { Component } from 'react';
+
+class Search extends Component {
+    constructor() {
+        super();
+        this.state = {
+            query: ''
+        };
+    }
+
+    handleChange(e) {
+        this.setState({
+            query: e.target.value
+        });
+    }
+
+    handleSubmit(e) {
+        e.preventDefault();
+        this.props.setSearchQuery(e.target.user_repo.value);
+    }
+
+    render() {
+        return (
+            <form onSubmit={(e) => this.handleSubmit(e)}>
+                <input
+                    name="user_repo"
+                    onChange={(e) => this.handleChange(e)}
+                    placeholder="Enter the user/repo"
+                    value={this.state.query}
+                />
+                <button type="submit">Find Issues</button>
+            </form>
+        );
+    }
+}
+
+export default Search;
